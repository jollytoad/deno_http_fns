export const snapshot = {};

snapshot[`Generate with startup time discovery > generate module 1`] = `
'// IMPORTANT: This file has been automatically generated, DO NOT edit by hand.

import { dynamicRoute } from "@http/discovery/dynamic-route";

export default dynamicRoute({
  "fileRootUrl": import.meta.resolve("./routes"),
  "eagerness": "startup",
  "consolidate": true,
});
'
`;

snapshot[`Generate with request time discovery > generate module 1`] = `
'// IMPORTANT: This file has been automatically generated, DO NOT edit by hand.

import { dynamicRoute } from "@http/discovery/dynamic-route";

export default dynamicRoute({
  "fileRootUrl": import.meta.resolve("./routes"),
  "eagerness": "request",
  "consolidate": true,
});
'
`;

snapshot[`Generate with static imports > generate module 1`] = `
'// IMPORTANT: This file has been automatically generated, DO NOT edit by hand.

import { byMethod } from "@http/route/by-method";
import { byPattern } from "@http/route/by-pattern";
import { cascade } from "@http/route/cascade";
import * as route_2 from "./routes/about.ts";
import route_3 from "./routes/index.ts";
import * as route_1 from "./routes/user/:name/index.ts";

export default cascade(
  byPattern("/user/:name{/}?", byMethod(route_1)),
  byPattern("/about", byMethod(route_2)),
  byPattern("/", route_3),
);
'
`;

snapshot[`Generate with dynamic imports > generate module 1`] = `
'// IMPORTANT: This file has been automatically generated, DO NOT edit by hand.

import { byMethod } from "@http/route/by-method";
import { byPattern } from "@http/route/by-pattern";
import { cascade } from "@http/route/cascade";
import { lazy } from "@http/route/lazy";

export default cascade(
  byPattern("/user/:name{/}?", lazy(async () => byMethod(await import("./routes/user/:name/index.ts")))),
  byPattern("/about", lazy(async () => byMethod(await import("./routes/about.ts")))),
  byPattern("/", lazy(() => import("./routes/index.ts"))),
);
'
`;
